on:
  # Compare the preceeding commit of main -> to the current commit of the main branch.
  # (Note: To compare changes between the last pushed commit to the remote main branch set `since_last_remote_commit: true`)
  push:
    branches:
      - master

env:
  matrix: ''
  changed_dirs: ''


jobs:
  search_changes:
    runs-on: ubuntu-latest
    name: Test changed-files
    outputs:
      changed_dirs: ${{ steps.changed-files-specific.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      # Example 2
      - name: Get changed files in the services folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v35
        with:
          files: |
            services/**
          dir_names: "true"
          separator: ","


      - name: Run step if any directories in the services folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"



  matrix:
      runs-on: ubuntu-latest
      needs: [search_changes]
      outputs:
        matrix: ${{ env.matrix }}
      steps:
        - name: set matrix
          id: set-matrix
          run: |
            echo "${{ needs.search_changes.outputs.changed_dirs }}"
            dirs="${{ needs.search_changes.outputs.changed_dirs }}"
            echo "$dirs"
            dirs="[ { ${dirs//,/", "} } ]"
            echo "$dirs"
            echo "matrix=$dirs" >> $GITHUB_ENV

  # check-matrix:
  #   runs-on: ubuntu-latest
  #   needs: [search_changes, matrix]
  #   steps:
  #     - name: Install json2yaml
  #       run: |
  #         sudo npm install -g json2yaml

  #     - name: Check matrix definition
  #       run: |
  #         matrix='${{ needs.matrix.outputs.matrix }}'
  #         echo $matrix
  #         echo $matrix | jq .
  #         echo $matrix | json2yaml

  deploy:
    runs-on: ubuntu-latest
    needs: [matrix]

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}

    steps:
      - name: deploy ${{matrix.dir}}
        run: echo "deploy ${{matrix.dir}}"
